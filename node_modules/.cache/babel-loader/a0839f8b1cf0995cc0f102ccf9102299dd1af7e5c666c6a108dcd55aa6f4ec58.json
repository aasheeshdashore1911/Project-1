{"ast":null,"code":"var _jsxFileName = \"D:\\\\Ashish\\\\React JS\\\\Project-1\\\\src\\\\components\\\\TextForm.js\",\n  _s = $RefreshSig$();\n//Using of rfc(React Functional Components):\n\nimport React, { useState } from 'react'; //using of react Hooks Search react Hooks on google.  \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TextForm(props) {\n  _s();\n  //using TextFrom(props).\n\n  const handleUpClick = () => {\n    //consol.log(\"Uppercase was clicked + text\")\n    let Text = text.toUpperCase(); //using of toUppercase(); Function.\n    setText(Text); //Text = Variable.\n    props.showAlert(\"Converted to uppercase!\", \"success\");\n  };\n  const handleLoClick = () => {\n    let Text = text.toLowerCase(); //using of toLowercase(); Function.\n    setText(Text);\n    props.showAlert(\"Converted to Lowercase!\", \"success\");\n  };\n  const handleCopy = () => {\n    // let Text = document.getElementById(\"myBox\");   \n    // Text.select();   //using of select(); Function jisse ham Text ko select karke usse copy kar sakte h. \n    navigator.clipboard.writeText(Text);\n    // document.getSelection().removeAllRanges();\n    // yaha hamne \"document.getSelection().removeAllRanges();\" ka used jab ham \"Text Copy\" button par \"click\" karenge toh wo \"Text\" ko Select nahi karke \"Copy\" kare \"Text\" ko uske liye kiya h.\n    props.showAlert(\"Copy to Clipboard!\", \"success\");\n  };\n  const handleClearClick = () => {\n    let Text = \"\"; //using of Clear Text\n    setText(Text);\n    props.showAlert(\"Text Cleared!\", \"success\");\n  };\n  const handleOnChange = event => {\n    //handleOnChange ka used karene se hi ham text ko Edit OR Type kar sakenge.  //event Ek bydefault Event h.\n\n    //consol.log(\"Onchange\");\n    setText(event.target.value);\n  };\n  const [text, setText] = useState(''); // https://legacy.reactjs.org/docs/hooks-intro.html\n  //text=\"new text\"; // Wrong way to change the state.\n  //setText(\"new text\"); //Correct way to change the state.\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      style: {\n        color: props.mode === 'dark' ? 'white' : '#042743'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"mb-3\",\n        children: props.heading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [\"  \", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          value: text,\n          onChange: handleOnChange,\n          style: {\n            backgroundColor: props.mode === 'dark' ? '#13466e' : 'white',\n            color: props.mode === 'dark' ? 'white' : '#042743'\n          },\n          id: \"myBox\",\n          rows: \"8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: text.length === 0,\n        className: \"btn btn-primary mx-1 my-1\",\n        onClick: handleUpClick,\n        children: \"Convert to Uppercase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: text.length === 0,\n        className: \"btn btn-primary mx-1 my-1\",\n        onClick: handleLoClick,\n        children: \"Convert to Lowercase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: text.length === 0,\n        className: \"btn btn-primary mx-1 my-1\",\n        onClick: handleCopy,\n        children: \"Copy Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: text.length === 0,\n        className: \"btn btn-primary mx-1 my-1\",\n        onClick: handleClearClick,\n        children: \"Clear Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-2\",\n      style: {\n        color: props.mode === 'dark' ? 'white' : '#042743'\n      },\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your text summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [text.split(/\\s+/).filter(element => {\n          return element.length !== 0;\n        }).length, \" words and \", text.length, \" characters.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [0.008 * text.split(' ').filter(element => {\n          return element.length !== 0;\n        }).length, \" Minutes read.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: text.length > 0 ? text : \"Nothing to Preview!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(TextForm, \"M8VhbSOru85VOsk7T2j5DvKRp+M=\");\n_c = TextForm;\nvar _c;\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","TextForm","props","_s","handleUpClick","Text","text","toUpperCase","setText","showAlert","handleLoClick","toLowerCase","handleCopy","navigator","clipboard","writeText","handleClearClick","handleOnChange","event","target","value","children","className","style","color","mode","heading","fileName","_jsxFileName","lineNumber","columnNumber","onChange","backgroundColor","id","rows","disabled","length","onClick","split","filter","element","_c","$RefreshReg$"],"sources":["D:/Ashish/React JS/Project-1/src/components/TextForm.js"],"sourcesContent":["//Using of rfc(React Functional Components):\r\n\r\nimport React, {useState} from 'react'     //using of react Hooks Search react Hooks on google.  \r\n\r\nexport default function TextForm(props) {   //using TextFrom(props).\r\n\r\n    const handleUpClick = ()=>{\r\n    //consol.log(\"Uppercase was clicked + text\")\r\n    let Text = text.toUpperCase();  //using of toUppercase(); Function.\r\n    setText(Text) //Text = Variable.\r\n    props.showAlert(\"Converted to uppercase!\",\"success\");\r\n    }\r\n\r\n    const handleLoClick = ()=>{\r\n      let  Text = text.toLowerCase();   //using of toLowercase(); Function.\r\n      setText(Text)\r\n      props.showAlert(\"Converted to Lowercase!\",\"success\");\r\n    }\r\n\r\n    const handleCopy = () =>{\r\n      // let Text = document.getElementById(\"myBox\");   \r\n      // Text.select();   //using of select(); Function jisse ham Text ko select karke usse copy kar sakte h. \r\n      navigator.clipboard.writeText(Text); \r\n      // document.getSelection().removeAllRanges();\r\n      // yaha hamne \"document.getSelection().removeAllRanges();\" ka used jab ham \"Text Copy\" button par \"click\" karenge toh wo \"Text\" ko Select nahi karke \"Copy\" kare \"Text\" ko uske liye kiya h.\r\n      props.showAlert(\"Copy to Clipboard!\",\"success\"); \r\n    }\r\n\r\n    const handleClearClick = ()=>{\r\n      let  Text =\"\";   //using of Clear Text\r\n      setText(Text)\r\n      props.showAlert(\"Text Cleared!\",\"success\"); \r\n    }\r\n\r\n    const handleOnChange = (event) =>{    //handleOnChange ka used karene se hi ham text ko Edit OR Type kar sakenge.  //event Ek bydefault Event h.\r\n\r\n        //consol.log(\"Onchange\");\r\n        setText(event.target.value)   \r\n    }\r\n\r\n    const [text, setText] = useState('');  // https://legacy.reactjs.org/docs/hooks-intro.html\r\n    //text=\"new text\"; // Wrong way to change the state.\r\n    //setText(\"new text\"); //Correct way to change the state.\r\n  return (\r\n    <>\r\n    <div className=\"container\" style={{color:props.mode==='dark'?'white':'#042743'}} > \r\n      {/*yaha hamne style={{color:props.mode==='dark'?'white':'#042743'}} ka used container ke under ke test ko \"white\" and \"#042743\" karne ke liye kiya h */}\r\n      {/*iska use hamne diffrent-diffrent conteiner used karne ke liye kiya h*/}\r\n        <h1 className='mb-3'>{props.heading}</h1>  \r\n        {/* yaha hamne \"mb-3\" ka used heading ke bottom me space dene ke liye kiya h.*/}\r\n        {/* Using Props.+ App.js props name */}\r\n        <div className=\"mb-3\">  {/* https://getbootstrap.com/docs/5.3/forms/form-control/ */}\r\n        <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor:props.mode==='dark'?'#13466e':'white',color:props.mode==='dark'?'white':'#042743'}} id=\"myBox\" rows=\"8\"></textarea>   \r\n        {/* yaha hamne \"First\" {} bracket ka used javaScript ke liye our \"Second\" bracket ka used \"Object\" ke liye kiya h. */}\r\n        {/* yaha hamne backgroundColor:props.mode==='dark'?'#13466e':'white' ka used \"text Box\" ke Background color ko change karne ke liye kiya h and color:props.mode==='dark'?'white':'#042743' ka used \"Text Box\" ke undar ke \"text\" ko change karne ke liye kiya h. */}\r\n        {/* value={text}, onChange={handleOnChange} add textarea tag, and replacing Rows=\"3\" to \"8\" and id = \"myBox\"*/}\r\n        </div>\r\n        <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleUpClick}>Convert to Uppercase</button>  \r\n        {/*Add Button Event */}\r\n        {/* yaha hamne \"disabled={text.length===0}\" ka used jab text Area me koi \"Text\" type nahi ho tab \"Button\" \"Disable\" ho and jab koi \"TextArea\" me \"Text\" type ho toh  \"Button\" \"Enable\" ho. */}\r\n        {/* onClick={handleUpClick} Used for Upercase Button*/}\r\n        {/*mx-1 ka used hamne dono Button ke bitch me space ke liye kiya h*/}\r\n        <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n        {/*Add Button Event */}\r\n        {/* yaha hamne \"disabled={text.length===0}\" ka used jab text Area me koi \"Text\" type nahi ho tab \"Button\" \"Disable\" ho and jab koi \"TextArea\" me \"Text\" type ho toh  \"Button\" \"Enable\" ho. */}\r\n        {/*onClick={handleLoClick} Used for Lowercase Button*/}\r\n        {/*mx-1 ka used hamne dono Button ke bitch me space ke liye kiya h*/}\r\n        <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleCopy}>Copy Text</button>\r\n        {/*Add Button Event */}\r\n        {/* yaha hamne \"disabled={text.length===0}\" ka used jab text Area me koi \"Text\" type nahi ho tab \"Button\" \"Disable\" ho and jab koi \"TextArea\" me \"Text\" type ho toh  \"Button\" \"Enable\" ho. */}\r\n        {/*onClick={handleCopy} Used for Copy Button*/}\r\n        {/*mx-1 ka used hamne dono Button ke bitch me space ke liye kiya h*/}\r\n        <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleClearClick}>Clear Text</button>\r\n        {/*Add Button Event */}\r\n        {/* yaha hamne \"disabled={text.length===0}\" ka used jab text Area me koi \"Text\" type nahi ho tab \"Button\" \"Disable\" ho and jab koi \"TextArea\" me \"Text\" type ho toh  \"Button\" \"Enable\" ho. */}\r\n        {/*onClick={handleClearClick} Button Used hamne Text ko Clear karne ke liye kiya h*/}\r\n        {/*mx-1 ka used hamne dono Button ke Left-RIght side me space ke liye kiya h*/}\r\n        {/*my-1 ka used hamne dono Button ke Upper-Lower side me space ke liye kiya h*/}\r\n    </div>\r\n    <div className=\"container my-2\" style={{color:props.mode==='dark'?'white':'#042743'}} > {/*EK or container add karne ke liye use kiya h*/}\r\n        <h2>Your text summary</h2>\r\n        <p>{text.split(/\\s+/).filter((element)=> {return element.length!==0}).length} words and {text.length} characters.</p> \r\n        {/* yaha hamne (\" \") ko (/\\s+/) se replaced kara h taki ham jab new line par jaye our word start kare toh wo word ko count kare with \"space including new line\".*/}\r\n        {/* yaha hamne \"{text.split(\" \").filter((element)=> {return element.length1=0}).length}\" ka used isliye kara h kyuki ham without space word and charecters ko count kar sake.*/}\r\n        {/* <p>3432 words and 453243 charecters</p>  */}\r\n        <p>{0.008*text.split(' ').filter((element)=> {return element.length!==0}).length} Minutes read.</p>  \r\n        {/*yaha bhi hamne \".filter((element)=> {return element.length!==0})\" ka used word ko read karne me minutes count karne ke liye kiya h taki wo 1 word =0.008 count kare.*/}\r\n        {/*iska use hamne text ko read karne me kitne minutes lagenge uske liye kiya h OR \"0.008\" jo h wo Approx 1 Minutes=125 Words h means 1words ko read karne me 1/125=0.008 */}\r\n        <h3>Preview</h3> \r\n        <p>{text.length>0?text:\"Nothing to Preview!\"}</p>  \r\n        {/* yaha hamne text.length>0?text:\"Nothing to Preview!\" ka used jab \"TextBox\" me \"text\" likha ho toh wo show ho warna \"Nothing to Preview!\" show ho iske liye kiya h */}\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}