{"ast":null,"code":"var _jsxFileName = \"D:\\\\Ashish\\\\React JS\\\\Project 1\\\\src\\\\components\\\\TextForm.js\",\n  _s = $RefreshSig$();\n//Using of rfc(React Functional Components):\n\nimport React, { useState } from 'react'; //using of react Hooks Search react Hooks on google.  \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TextForm(props) {\n  _s();\n  //using TextFrom(props).\n\n  const handleUpClick = () => {\n    //consol.log(\"Uppercase was clicked + text\")\n    let Text = text.toUpperCase(); //using of toUppercase() Function.\n    setText(Text); //Text = Variable.\n  };\n  const handleOnChange = event => {\n    //handleOnChange ka used karene se hi ham text ko Edit OR Type kar sakenge.  //event Ek bydefault Event h.\n\n    //consol.log(\"Onchange\");\n    setText(event.target.value);\n  };\n  const [text, setText] = useState('Enter text here'); // https://legacy.reactjs.org/docs/hooks-intro.html\n  //text=\"new text\"; // Wrong way to change the state.\n  //setText(\"new text\"); //Correct way to change the state.\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: props.heading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), \"  \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [\"  \", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          value: text,\n          onChange: handleOnChange,\n          id: \"myBox\",\n          rows: \"8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: handleUpClick,\n        children: \"Convert to Uppercase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Your text summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"3432 words and 453243 characters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(TextForm, \"3SkFjrn2ucpyzrB0FJHiV9CSQT4=\");\n_c = TextForm;\nvar _c;\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","TextForm","props","_s","handleUpClick","Text","text","toUpperCase","setText","handleOnChange","event","target","value","children","className","heading","fileName","_jsxFileName","lineNumber","columnNumber","onChange","id","rows","onClick","_c","$RefreshReg$"],"sources":["D:/Ashish/React JS/Project 1/src/components/TextForm.js"],"sourcesContent":["//Using of rfc(React Functional Components):\r\n\r\nimport React, {useState} from 'react'     //using of react Hooks Search react Hooks on google.  \r\n\r\nexport default function TextForm(props) {   //using TextFrom(props).\r\n\r\n    const handleUpClick = ()=>{\r\n    //consol.log(\"Uppercase was clicked + text\")\r\n    let Text = text.toUpperCase();  //using of toUppercase() Function.\r\n    setText(Text) //Text = Variable.\r\n    }\r\n\r\n    const handleOnChange = (event) =>{    //handleOnChange ka used karene se hi ham text ko Edit OR Type kar sakenge.  //event Ek bydefault Event h.\r\n\r\n        //consol.log(\"Onchange\");\r\n        setText(event.target.value)   \r\n    }\r\n\r\n    const [text, setText] = useState('Enter text here');  // https://legacy.reactjs.org/docs/hooks-intro.html\r\n    //text=\"new text\"; // Wrong way to change the state.\r\n    //setText(\"new text\"); //Correct way to change the state.\r\n  return (\r\n    <>\r\n    <div className=\"container\">\r\n        <h1>{props.heading}</h1>  {/* Using Props.+ App.js props name */}\r\n        <div className=\"mb-3\">  {/* https://getbootstrap.com/docs/5.3/forms/form-control/ */}\r\n        <textarea className=\"form-control\" value={text} onChange={handleOnChange} id=\"myBox\" rows=\"8\"></textarea>   \r\n            {/* value={text}, onChange={handleOnChange} add textarea tag, and replacing Rows=\"3\" to \"8\" and id = \"myBox\"*/}\r\n        </div>\r\n        <button className=\"btn btn-primary\" onClick={handleUpClick}>Convert to Uppercase</button>  \r\n        {/*Add Button Event */}\r\n        {/* onClick={handleUpclick add} */}\r\n    </div>\r\n    <div className=\"container my-3\">\r\n        <h1>Your text summary</h1>\r\n        <p>3432 words and 453243 characters</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO,EAAK;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1C,eAAe,SAASC,QAAQA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAAI;;EAExC,MAAMC,aAAa,GAAGA,CAAA,KAAI;IAC1B;IACA,IAAIC,IAAI,GAAGC,IAAI,CAACC,WAAW,CAAC,CAAC,CAAC,CAAE;IAChCC,OAAO,CAACH,IAAI,CAAC,EAAC;EACd,CAAC;EAED,MAAMI,cAAc,GAAIC,KAAK,IAAI;IAAK;;IAElC;IACAF,OAAO,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;EAED,MAAM,CAACN,IAAI,EAAEE,OAAO,CAAC,GAAGZ,QAAQ,CAAC,iBAAiB,CAAC,CAAC,CAAE;EACtD;EACA;EACF,oBACEE,OAAA,CAAAE,SAAA;IAAAa,QAAA,gBACAf,OAAA;MAAKgB,SAAS,EAAC,WAAW;MAAAD,QAAA,gBACtBf,OAAA;QAAAe,QAAA,EAAKX,KAAK,CAACa;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,MAAE,eAC1BrB,OAAA;QAAKgB,SAAS,EAAC,MAAM;QAAAD,QAAA,GAAC,IAAE,eACxBf,OAAA;UAAUgB,SAAS,EAAC,cAAc;UAACF,KAAK,EAAEN,IAAK;UAACc,QAAQ,EAAEX,cAAe;UAACY,EAAE,EAAC,OAAO;UAACC,IAAI,EAAC;QAAG;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAW,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEpG,CAAC,eACNrB,OAAA;QAAQgB,SAAS,EAAC,iBAAiB;QAACS,OAAO,EAAEnB,aAAc;QAAAS,QAAA,EAAC;MAAoB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGxF,CAAC,eACNrB,OAAA;MAAKgB,SAAS,EAAC,gBAAgB;MAAAD,QAAA,gBAC3Bf,OAAA;QAAAe,QAAA,EAAI;MAAiB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1BrB,OAAA;QAAAe,QAAA,EAAG;MAAgC;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC;EAAA,eACJ,CAAC;AAEP;AAAChB,EAAA,CAnCuBF,QAAQ;AAAAuB,EAAA,GAARvB,QAAQ;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}