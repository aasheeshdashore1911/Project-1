{"ast":null,"code":"var _jsxFileName = \"D:\\\\Ashish\\\\React JS\\\\Project 1\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm'; //import TextForm components\nimport Alert from './components/Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState(\"light\"); //yadi useState(\"\") ke under ham \"light\" type karenge toh Navbar \"light\" Or \"dark\" type karenge toh \"Dark\" hoga.\n\n  const [alert, setAlert] = useState(null); //Alert ko set karne ke liye hamne useState ka used kara h.\n\n  const showAlert = (message, type) => {\n    //Alert ke message and Type ko Show karne ke liye is function ka used kara h.\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      //\"setTimeout\" Function ka used hamne Alert ko 1.5sec me Automatic hatane ke liye kiya h.\n      setAlert(null);\n    }, 1000);\n  };\n  const toggleMode = () => {\n    if (mode === \"light\")\n      //jab mode barabar hoga \"light\" ke toh use \"Dark\" mode me change karde.\n      {\n        setMode(\"dark\");\n        document.body.style.backgroundColor = \"#042743\"; // Body ka background color \"#042743\" set karne ke liye.\n        showAlert(\"Dark mode has been enabled\", \"success\"); //Alert ko show karne ke liye showAlert ka used kara h (\"success\") ka use hamne Alert ke type means \"color\"code(green) ko show karne ke liye kiya h.\n      } else {\n      setMode(\"light\"); //warna \"light\" mode rahne de.\n      document.body.style.backgroundColor = \"white\"; // Body ka background color \"white\" set karne ke liye.\n      showAlert(\"Light mode has been enabled\", \"success\"); //Alert ko show karne ke liye showAlert ka used kara h (\"success\") ka use hamne Alert ke type means \"color\"code(green) ko show karne ke liye kiya h.\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"TextUtils\",\n      aboutText: \"About\",\n      mode: mode,\n      toggleMode: toggleMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-2\",\n      children: [\"  \", /*#__PURE__*/_jsxDEV(TextForm, {\n        showAlert: showAlert,\n        heading: \"Enter the text to analyze below\",\n        mode: mode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"m6kRqVQtWM8r+w5WsfDvS5sH+RU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Navbar","TextForm","Alert","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor","children","title","aboutText","fileName","_jsxFileName","lineNumber","columnNumber","className","heading","_c","$RefreshReg$"],"sources":["D:/Ashish/React JS/Project 1/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar'; \nimport TextForm from './components/TextForm'; //import TextForm components\nimport Alert from './components/Alert';\n\nfunction App() {\n  const[mode,setMode] = useState(\"light\");  //yadi useState(\"\") ke under ham \"light\" type karenge toh Navbar \"light\" Or \"dark\" type karenge toh \"Dark\" hoga.\n\n  const[alert, setAlert] = useState(null);  //Alert ko set karne ke liye hamne useState ka used kara h.\n\n  const showAlert = (message, type)=>{   //Alert ke message and Type ko Show karne ke liye is function ka used kara h.\n    setAlert({\n      msg: message,\n      type: type,\n    })\n    setTimeout(() => {  \n      //\"setTimeout\" Function ka used hamne Alert ko 1.5sec me Automatic hatane ke liye kiya h.\n      setAlert(null);\n    }, 1000);\n  }\n\n  const toggleMode = ()=>{\n    if(mode === \"light\")  //jab mode barabar hoga \"light\" ke toh use \"Dark\" mode me change karde.\n    {\n      setMode(\"dark\");\n      document.body.style.backgroundColor =\"#042743\"; // Body ka background color \"#042743\" set karne ke liye.\n      showAlert(\"Dark mode has been enabled\",\"success\");  //Alert ko show karne ke liye showAlert ka used kara h (\"success\") ka use hamne Alert ke type means \"color\"code(green) ko show karne ke liye kiya h.\n    }\n    else{\n      setMode(\"light\");  //warna \"light\" mode rahne de.\n      document.body.style.backgroundColor =\"white\";  // Body ka background color \"white\" set karne ke liye.\n      showAlert(\"Light mode has been enabled\",\"success\");  //Alert ko show karne ke liye showAlert ka used kara h (\"success\") ka use hamne Alert ke type means \"color\"code(green) ko show karne ke liye kiya h.\n    }\n  }\n  return (\n    <>\n    <Navbar title=\"TextUtils\" aboutText=\"About\" mode={mode} toggleMode = {toggleMode} /> \n    {/*yaha ham ne ek java class {mode} ka use kiya h jise ham  Navvar.js file me ek {props.mode} ke isme use karenge. our {toggleMode} function ka bhi used karenge Switch ke liye*/}\n    {/* <Navbar/> ye default propType ke liye */}\n    <Alert alert = {alert} />\n    <div className='container my-2'>  {/*my-3 ka used hamne Top and Bottom me space dene ke liye kiya h*/}\n    <TextForm showAlert={showAlert} heading =\"Enter the text to analyze below\" mode={mode} />\n    </div>\n    </>\n  );\n}\n\nexport default App;\n\n\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB,CAAC,CAAC;AAC9C,OAAOC,KAAK,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAK,CAACC,IAAI,EAACC,OAAO,CAAC,GAAGX,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAE;;EAE1C,MAAK,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAE;;EAE1C,MAAMc,SAAS,GAAGA,CAACC,OAAO,EAAEC,IAAI,KAAG;IAAI;IACrCH,QAAQ,CAAC;MACPI,GAAG,EAAEF,OAAO;MACZC,IAAI,EAAEA;IACR,CAAC,CAAC;IACFE,UAAU,CAAC,MAAM;MACf;MACAL,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,MAAMM,UAAU,GAAGA,CAAA,KAAI;IACrB,IAAGT,IAAI,KAAK,OAAO;MAAG;MACtB;QACEC,OAAO,CAAC,MAAM,CAAC;QACfS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAE,SAAS,CAAC,CAAC;QAChDT,SAAS,CAAC,4BAA4B,EAAC,SAAS,CAAC,CAAC,CAAE;MACtD,CAAC,MACG;MACFH,OAAO,CAAC,OAAO,CAAC,CAAC,CAAE;MACnBS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAE,OAAO,CAAC,CAAE;MAC/CT,SAAS,CAAC,6BAA6B,EAAC,SAAS,CAAC,CAAC,CAAE;IACvD;EACF,CAAC;EACD,oBACET,OAAA,CAAAE,SAAA;IAAAiB,QAAA,gBACAnB,OAAA,CAACJ,MAAM;MAACwB,KAAK,EAAC,WAAW;MAACC,SAAS,EAAC,OAAO;MAAChB,IAAI,EAAEA,IAAK;MAACS,UAAU,EAAIA;IAAW;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAGpFzB,OAAA,CAACF,KAAK;MAACS,KAAK,EAAIA;IAAM;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzBzB,OAAA;MAAK0B,SAAS,EAAC,gBAAgB;MAAAP,QAAA,GAAC,IAAE,eAClCnB,OAAA,CAACH,QAAQ;QAACY,SAAS,EAAEA,SAAU;QAACkB,OAAO,EAAE,iCAAiC;QAACtB,IAAI,EAAEA;MAAK;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpF,CAAC;EAAA,eACJ,CAAC;AAEP;AAACrB,EAAA,CAxCQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AA0CZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}