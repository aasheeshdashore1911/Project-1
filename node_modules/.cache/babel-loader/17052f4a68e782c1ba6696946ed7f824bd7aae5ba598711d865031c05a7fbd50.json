{"ast":null,"code":"import{useState}from'react';import'./App.css';import Navbar from'./components/Navbar';import About from'./components/About';//ye bhi comment hoga github time par\nimport TextForm from'./components/TextForm';//import TextForm components\nimport Alert from'./components/Alert';import{//ye bhi comment hoga github time par.\nBrowserRouter as Router,Switch,Route// Link\n}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function App(){const[mode,setMode]=useState(\"light\");//yadi useState(\"\") ke under ham \"light\" type karenge toh Navbar \"light\" Or \"dark\" type karenge toh \"Dark\" hoga.\nconst[alert,setAlert]=useState(null);//Alert ko set karne ke liye hamne useState ka used kara h.\nconst showAlert=(message,type)=>{//Alert ke message and Type ko Show karne ke liye is function ka used kara h.\nsetAlert({msg:message,type:type});setTimeout(()=>{//\"setTimeout\" Function ka used hamne Alert ko 1sec me Automatic hatane ke liye kiya h isliye \"1000\" used kiya h.\nsetAlert(null);},1000);};const toggleMode=()=>{if(mode===\"light\")//jab mode barabar hoga \"light\" ke toh use \"Dark\" mode me change karde.\n{setMode(\"dark\");document.body.style.backgroundColor=\"#042743\";// Body ka background color \"#042743\" set karne ke liye.\nshowAlert(\"Dark mode has been enabled\",\"success\");//Alert ko show karne ke liye showAlert ka used kara h (\"success\") ka use hamne Alert ke type means \"color\"code(green) ko show karne ke liye kiya h.\n// document.title = \"TextUtils-Dark Mode\";   //jab ham dark mode enable karenge toh title bhi \"TextUtils-Dark Mode\" change hoga.\n// setInterval(() => {\n//   document.title = \"TextUtils is Amazing Mode\";\n// }, 2000);      \n// setInterval(() => {\n//   document.title = \"Install TextUtils Now\";\n// }, 1500);\n//Note: iska used hame nahi karna h wase isse title ko intract karne ke liye used kara h. Example dekhe.\n}else{setMode(\"light\");//warna \"light\" mode rahne de.\ndocument.body.style.backgroundColor=\"white\";// Body ka background color \"white\" set karne ke liye.\nshowAlert(\"Light mode has been enabled\",\"success\");//Alert ko show karne ke liye showAlert ka used kara h (\"success\") ka use hamne Alert ke type means \"color\"code(green) ko show karne ke liye kiya h.\n// document.title = \"TextUtils-Light Mode\";  //jab ham light Mode enable karenge toh title bhi \"TextUtils-Light Mode\" change hoga.\n}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Router,{children:[\" \",/*#__PURE__*/_jsx(Navbar,{title:\"TextUtils\",aboutText:\"About\",mode:mode,toggleMode:toggleMode}),/*#__PURE__*/_jsx(Alert,{alert:alert}),/*#__PURE__*/_jsxs(\"div\",{className:\"container my-2\",children:[\"  \",/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{path:\"/about\",children:/*#__PURE__*/_jsx(About,{mode:mode})}),/*#__PURE__*/_jsx(Route,{path:\"/\",children:/*#__PURE__*/_jsx(TextForm,{showAlert:showAlert,heading:\"Try TextUtils - Word Counter, Character Counter, Text Copy\",mode:mode})})]})]})]}),\"  \"]});}export default App;// Note: jab ham Github ka used karege toh ham router me used kiya hua comment kar denge. and comment \"TextForm\" ko uncomment kar denge.","map":{"version":3,"names":["useState","Navbar","About","TextForm","Alert","BrowserRouter","Router","Switch","Route","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","App","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor","children","title","aboutText","className","path","heading"],"sources":["D:/Ashish/React JS/Project-1/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar'; \nimport About from './components/About'; //ye bhi comment hoga github time par\nimport TextForm from './components/TextForm'; //import TextForm components\nimport Alert from './components/Alert';\nimport {  //ye bhi comment hoga github time par.\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  // Link\n} from \"react-router-dom\";\n\n\nfunction App() {\n  \n  const[mode,setMode] = useState(\"light\");  //yadi useState(\"\") ke under ham \"light\" type karenge toh Navbar \"light\" Or \"dark\" type karenge toh \"Dark\" hoga.\n\n  const[alert, setAlert] = useState(null);  //Alert ko set karne ke liye hamne useState ka used kara h.\n\n  const showAlert = (message, type)=>{   //Alert ke message and Type ko Show karne ke liye is function ka used kara h.\n    setAlert({\n      msg: message,\n      type: type,\n    })\n    setTimeout(() => {  \n      //\"setTimeout\" Function ka used hamne Alert ko 1sec me Automatic hatane ke liye kiya h isliye \"1000\" used kiya h.\n      setAlert(null);\n    }, 1000);\n  }\n\n  const toggleMode = ()=>{\n    if(mode === \"light\")  //jab mode barabar hoga \"light\" ke toh use \"Dark\" mode me change karde.\n    {\n      setMode(\"dark\");\n      document.body.style.backgroundColor =\"#042743\"; // Body ka background color \"#042743\" set karne ke liye.\n      showAlert(\"Dark mode has been enabled\",\"success\");  //Alert ko show karne ke liye showAlert ka used kara h (\"success\") ka use hamne Alert ke type means \"color\"code(green) ko show karne ke liye kiya h.\n      // document.title = \"TextUtils-Dark Mode\";   //jab ham dark mode enable karenge toh title bhi \"TextUtils-Dark Mode\" change hoga.\n      \n      // setInterval(() => {\n      //   document.title = \"TextUtils is Amazing Mode\";\n      // }, 2000);      \n      // setInterval(() => {\n      //   document.title = \"Install TextUtils Now\";\n      // }, 1500);\n      //Note: iska used hame nahi karna h wase isse title ko intract karne ke liye used kara h. Example dekhe.\n    }\n    else{\n      setMode(\"light\");  //warna \"light\" mode rahne de.\n      document.body.style.backgroundColor =\"white\";  // Body ka background color \"white\" set karne ke liye.\n      showAlert(\"Light mode has been enabled\",\"success\");  //Alert ko show karne ke liye showAlert ka used kara h (\"success\") ka use hamne Alert ke type means \"color\"code(green) ko show karne ke liye kiya h.\n      // document.title = \"TextUtils-Light Mode\";  //jab ham light Mode enable karenge toh title bhi \"TextUtils-Light Mode\" change hoga.\n    }\n  }\n  return (\n    <>\n    <Router> {/*isko comment karna h github ke time*/}\n    <Navbar title=\"TextUtils\" aboutText=\"About\" mode={mode} toggleMode = {toggleMode} /> \n    {/*yaha ham ne ek java class {mode} ka use kiya h jise ham  Navvar.js file me ek {props.mode} ke isme use karenge. our {toggleMode} function ka bhi used karenge Switch ke liye*/}\n    {/* <Navbar/> ye default propType ke liye */}\n    <Alert alert = {alert} />\n    <div className='container my-2'>  {/*my-3 ka used hamne Top and Bottom me space dene ke liye kiya h*/}\n    <Switch>\n          <Route path=\"/about\">\n            <About mode={mode} />\n          </Route>\n          <Route path=\"/\">\n          <TextForm showAlert={showAlert} heading =\"Try TextUtils - Word Counter, Character Counter, Text Copy\" mode={mode}/>\n          {/* TextForm ki Heading Text add kari h*/}\n          </Route>\n    </Switch>\n        {/*ye sab bhi <Switch>se</switch> tak comment karna h github ke used time par*/}\n        {/* <TextForm showAlert={showAlert} heading =\"Enter the text to analyze below\" mode={mode}/> */}\n        {/* ise uncomment karna h github time par */}\n        {/* <About /> */}\n    </div>\n    </Router>  {/*ise bhi comment karna h */}\n    </>\n\n  );\n}\n\nexport default App;\n\n// Note: jab ham Github ka used karege toh ham router me used kiya hua comment kar denge. and comment \"TextForm\" ko uncomment kar denge.\n"],"mappings":"AAAA,OAASA,QAAQ,KAAQ,OAAO,CAChC,MAAO,WAAW,CAClB,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CACxC,MAAO,CAAAC,KAAK,KAAM,oBAAoB,CAAE;AACxC,MAAO,CAAAC,QAAQ,KAAM,uBAAuB,CAAE;AAC9C,MAAO,CAAAC,KAAK,KAAM,oBAAoB,CACtC,OAAU;AACRC,aAAa,GAAI,CAAAC,MAAM,CACvBC,MAAM,CACNC,KACA;AAAA,KACK,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,gCAAAC,QAAA,IAAAC,SAAA,yBAG1B,QAAS,CAAAC,GAAGA,CAAA,CAAG,CAEb,KAAK,CAACC,IAAI,CAACC,OAAO,CAAC,CAAGjB,QAAQ,CAAC,OAAO,CAAC,CAAG;AAE1C,KAAK,CAACkB,KAAK,CAAEC,QAAQ,CAAC,CAAGnB,QAAQ,CAAC,IAAI,CAAC,CAAG;AAE1C,KAAM,CAAAoB,SAAS,CAAGA,CAACC,OAAO,CAAEC,IAAI,GAAG,CAAI;AACrCH,QAAQ,CAAC,CACPI,GAAG,CAAEF,OAAO,CACZC,IAAI,CAAEA,IACR,CAAC,CAAC,CACFE,UAAU,CAAC,IAAM,CACf;AACAL,QAAQ,CAAC,IAAI,CAAC,CAChB,CAAC,CAAE,IAAI,CAAC,CACV,CAAC,CAED,KAAM,CAAAM,UAAU,CAAGA,CAAA,GAAI,CACrB,GAAGT,IAAI,GAAK,OAAO,CAAG;AACtB,CACEC,OAAO,CAAC,MAAM,CAAC,CACfS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAE,SAAS,CAAE;AAChDT,SAAS,CAAC,4BAA4B,CAAC,SAAS,CAAC,CAAG;AACpD;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACF,CAAC,IACG,CACFH,OAAO,CAAC,OAAO,CAAC,CAAG;AACnBS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAE,OAAO,CAAG;AAC/CT,SAAS,CAAC,6BAA6B,CAAC,SAAS,CAAC,CAAG;AACrD;AACF,CACF,CAAC,CACD,mBACER,KAAA,CAAAE,SAAA,EAAAgB,QAAA,eACAlB,KAAA,CAACN,MAAM,EAAAwB,QAAA,EAAC,GAAC,cACTpB,IAAA,CAACT,MAAM,EAAC8B,KAAK,CAAC,WAAW,CAACC,SAAS,CAAC,OAAO,CAAChB,IAAI,CAAEA,IAAK,CAACS,UAAU,CAAIA,UAAW,CAAE,CAAC,cAGpFf,IAAA,CAACN,KAAK,EAACc,KAAK,CAAIA,KAAM,CAAE,CAAC,cACzBN,KAAA,QAAKqB,SAAS,CAAC,gBAAgB,CAAAH,QAAA,EAAC,IAAE,cAClClB,KAAA,CAACL,MAAM,EAAAuB,QAAA,eACDpB,IAAA,CAACF,KAAK,EAAC0B,IAAI,CAAC,QAAQ,CAAAJ,QAAA,cAClBpB,IAAA,CAACR,KAAK,EAACc,IAAI,CAAEA,IAAK,CAAE,CAAC,CAChB,CAAC,cACRN,IAAA,CAACF,KAAK,EAAC0B,IAAI,CAAC,GAAG,CAAAJ,QAAA,cACfpB,IAAA,CAACP,QAAQ,EAACiB,SAAS,CAAEA,SAAU,CAACe,OAAO,CAAE,4DAA4D,CAACnB,IAAI,CAAEA,IAAK,CAAC,CAAC,CAE5G,CAAC,EACN,CAAC,EAKJ,CAAC,EACE,CAAC,KAAE,EACT,CAAC,CAGP,CAEA,cAAe,CAAAD,GAAG,CAElB"},"metadata":{},"sourceType":"module","externalDependencies":[]}